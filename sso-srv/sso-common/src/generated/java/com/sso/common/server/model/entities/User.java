package com.sso.common.server.model.entities;
// Generated by Hibernate Tools 5.0.0.Alpha1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,schema="public"
    , uniqueConstraints = {@UniqueConstraint(columnNames="email"), @UniqueConstraint(columnNames="username")} 
)
public class User  implements java.io.Serializable {


     private Long id;
     private OrgUnit orgUnit;
     private Position position;
     private String username;
     private String password;
     private boolean accountNonExpired;
     private boolean accountNonLocked;
     private boolean credentialsNonExpired;
     private boolean enabled;
     private String firstName;
     private String middleName;
     private String lastName;
     private String email;
     private String avatarUrl;
     private String gender;
     private Date created;
     private Date updated;
     private String description;
     private Set<Session> sessions = new HashSet<Session>(0);
     private Set<UserRole> userRoles = new HashSet<UserRole>(0);

    public User() {
    }

	
    public User(OrgUnit orgUnit, Position position, String username, boolean accountNonExpired, boolean accountNonLocked, boolean credentialsNonExpired, boolean enabled, String firstName, String lastName, String email, Date created) {
        this.orgUnit = orgUnit;
        this.position = position;
        this.username = username;
        this.accountNonExpired = accountNonExpired;
        this.accountNonLocked = accountNonLocked;
        this.credentialsNonExpired = credentialsNonExpired;
        this.enabled = enabled;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.created = created;
    }
    public User(OrgUnit orgUnit, Position position, String username, String password, boolean accountNonExpired, boolean accountNonLocked, boolean credentialsNonExpired, boolean enabled, String firstName, String middleName, String lastName, String email, String avatarUrl, String gender, Date created, Date updated, String description, Set<Session> sessions, Set<UserRole> userRoles) {
       this.orgUnit = orgUnit;
       this.position = position;
       this.username = username;
       this.password = password;
       this.accountNonExpired = accountNonExpired;
       this.accountNonLocked = accountNonLocked;
       this.credentialsNonExpired = credentialsNonExpired;
       this.enabled = enabled;
       this.firstName = firstName;
       this.middleName = middleName;
       this.lastName = lastName;
       this.email = email;
       this.avatarUrl = avatarUrl;
       this.gender = gender;
       this.created = created;
       this.updated = updated;
       this.description = description;
       this.sessions = sessions;
       this.userRoles = userRoles;
    }
   
     @SequenceGenerator(name="generator", sequenceName="user_seq")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="org_unit_id", nullable=false)
    public OrgUnit getOrgUnit() {
        return this.orgUnit;
    }
    
    public void setOrgUnit(OrgUnit orgUnit) {
        this.orgUnit = orgUnit;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="position_id", nullable=false)
    public Position getPosition() {
        return this.position;
    }
    
    public void setPosition(Position position) {
        this.position = position;
    }

    
    @Column(name="username", unique=true, nullable=false, length=200)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password")
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="account_non_expired", nullable=false)
    public boolean getAccountNonExpired() {
        return this.accountNonExpired;
    }
    
    public void setAccountNonExpired(boolean accountNonExpired) {
        this.accountNonExpired = accountNonExpired;
    }

    
    @Column(name="account_non_locked", nullable=false)
    public boolean getAccountNonLocked() {
        return this.accountNonLocked;
    }
    
    public void setAccountNonLocked(boolean accountNonLocked) {
        this.accountNonLocked = accountNonLocked;
    }

    
    @Column(name="credentials_non_expired", nullable=false)
    public boolean getCredentialsNonExpired() {
        return this.credentialsNonExpired;
    }
    
    public void setCredentialsNonExpired(boolean credentialsNonExpired) {
        this.credentialsNonExpired = credentialsNonExpired;
    }

    
    @Column(name="enabled", nullable=false)
    public boolean getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    
    @Column(name="first_name", nullable=false, length=200)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="middle_name", length=200)
    public String getMiddleName() {
        return this.middleName;
    }
    
    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }

    
    @Column(name="last_name", nullable=false, length=200)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="email", unique=true, nullable=false)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="avatar_url", length=300)
    public String getAvatarUrl() {
        return this.avatarUrl;
    }
    
    public void setAvatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
    }

    
    @Column(name="gender", length=10)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=29)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated", length=29)
    public Date getUpdated() {
        return this.updated;
    }
    
    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    
    @Column(name="description", length=200)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Session> getSessions() {
        return this.sessions;
    }
    
    public void setSessions(Set<Session> sessions) {
        this.sessions = sessions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<UserRole> getUserRoles() {
        return this.userRoles;
    }
    
    public void setUserRoles(Set<UserRole> userRoles) {
        this.userRoles = userRoles;
    }




}


